/* eslint-disable */
"use strict";var os=require("os"),path=require("path"),cp=require("child_process"),fs=require("fs"),http=require("http"),open=require("open"),ws=require("ws"),net=require("net"),querystring=require("querystring");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var path__default=_interopDefaultLegacy(path),cp__default=_interopDefaultLegacy(cp),open__default=_interopDefaultLegacy(open),ws__default=_interopDefaultLegacy(ws);const DIR_ASSETS=path.resolve(__dirname,"assets"),DIR_CURRENT=path.dirname(process.execPath),FILE_CONFIG=path.resolve(DIR_CURRENT,"rmc.config.json"),isDEV=!1,isWin32="win32"===process.platform,isMacOS="darwin"===process.platform,jsonStringify=JSON.stringify,jsonParse=JSON.parse,pathAbsolutely=e=>path.resolve(DIR_CURRENT,path.normalize(e)),pathNormalizeOrAbsolutely=e=>"."===e[0]?pathAbsolutely(e):path.normalize(e),getRouterAddress=()=>{const e=os.networkInterfaces();for(const t in e)if(e[t])for(const r of e[t])if(!r.internal&&/^192\.168\.\d+\.\d+$/.test(r.address))return r.address;return""},createZipCode=()=>{const e=(1e9*Math.random()+"").slice(0,4);return 4===e.length?+e:createZipCode()};var name="remote-media-control";let CONFIG_FILE_STR="{}";const CONFIG={player:"vlc",port:3e3,vlc:"vlc",vlcIsValid:!1,mpv:"mpv",mpvIsValid:!1,library:["C:/","D:/","/","./"]},checkPlayer=e=>{let t=!1;if(e=e.trim())try{isWin32||isMacOS?(e=pathAbsolutely(e),t=fs.existsSync(e)&&!fs.statSync(e).isDirectory()):(e=pathNormalizeOrAbsolutely(e),t=fs.existsSync(e)&&!fs.statSync(e).isDirectory()||!/\//.test(e)&&!!cp.execSync("command -v "+jsonStringify(pathNormalizeOrAbsolutely(e))).toString().replace(/\W+/gi,""))}catch(r){}return t},saveConfig=()=>{let e=!1;return CONFIG_FILE_STR!==(CONFIG_FILE_STR=jsonStringify(CONFIG,null,2))&&(e=!0,console.log(os.EOL+"CONFIG save:"),console.log("-------------------------------------------------------------"),console.log(CONFIG_FILE_STR),fs.writeFileSync(FILE_CONFIG,CONFIG_FILE_STR),console.log("-------------------------------------------------------------")),e},readConfig=()=>{if(fs.existsSync(FILE_CONFIG)){const e=jsonParse(CONFIG_FILE_STR=fs.readFileSync(FILE_CONFIG,"utf8").trim());for(const t in e)t in CONFIG&&(CONFIG[t]=e[t])}},mendConfig=()=>{/^(vlc|mpv)$/.test(CONFIG.player)||(CONFIG.player="vlc"),CONFIG.port=+CONFIG.port||0,CONFIG.library=(CONFIG.library||[]).map((e=>e.trim())).filter(Boolean),CONFIG.vlc=CONFIG.vlc.trim(),CONFIG.mpv=CONFIG.mpv.trim();let e=CONFIG.vlc||"vlc";[e,...isWin32?["C:\\Program Files\\VideoLAN\\VLC\\vlc.exe","C:\\Program Files (x86)\\VideoLAN\\VLC\\vlc.exe"]:isMacOS?["/Applications/VLC.app/Contents/MacOS/VLC"]:["vlc","/usr/bin/vlc","/usr/local/bin/vlc"]].some((t=>checkPlayer(e=t)))||(e=""),(CONFIG.vlcIsValid=!!e)&&(CONFIG.vlc=e);let t=CONFIG.mpv||"mpv";[t,...isWin32?["C:\\Program Files\\mpv\\mpv.exe"]:isMacOS?["mpv","/Applications/mpv.app/Contents/MacOS/mpv","~/bin/mpv"]:["mpv","/usr/bin/mpv","/usr/local/bin/mpv"]].some((e=>checkPlayer(t=e)))||(t=""),(CONFIG.mpvIsValid=!!t)&&(CONFIG.mpv=t)},initConfig=()=>{readConfig(),mendConfig(),saveConfig()||(console.log(os.EOL+"CONFIG init:"),console.log("-------------------------------------------------------------"),console.log(CONFIG_FILE_STR),console.log("-------------------------------------------------------------"))},index=fs.readFileSync(path.resolve(DIR_ASSETS,"index.html")),page404=fs.readFileSync(path.resolve(DIR_ASSETS,"404.html")),bundle=fs.readFileSync(path.resolve(DIR_ASSETS,"bundle.js")),favicon=fs.readFileSync(path.resolve(DIR_ASSETS,"favicon.png")),styles=fs.readFileSync(path.resolve(DIR_ASSETS,"bootstrap-flatly.min.css"));let port=-1;const SERVER=http.createServer(((e,t)=>{let r,o="text/html",s=200;switch(e.url){case"":case"/":r=index;break;case"/favicon.png":r=favicon,o="image/png";break;case"/styles.css":r=styles,o="text/css";break;case"/bundle.js":r=bundle,o="application/javascript";break;default:r=page404,s=404,console.log("Server url: ",e.url)}t.setHeader("Content-Type",o),t.writeHead(s),t.end(r)})).on("error",(e=>{console.log("Server error",e.code),"EADDRINUSE"===e.code?listenServer(0):(console.error(e),process.exit())})).on("listening",(()=>{port=+SERVER.address().port,console.log("Server listening. Port: ",port),port?(CONFIG.port!==(CONFIG.port=port)&&saveConfig(),open__default.default("http://localhost:"+port+"/#modalSettingsToggle")):(console.error(new Error("Server. Not valid port: "+port)),process.exit())})),listenServer=(e=CONFIG.port)=>{port!==(port=+e||0)&&(SERVER.close(),SERVER.listen(port))},pass=""+createZipCode(),createVLC=(e,t,r)=>{let o=9090;const s=["--intf","http","-f","--http-port",""+o,"--http-password",pass],l=jsonStringify(path.basename(e));let a,n=!1;const i=[],p=()=>{y=!1;const e=a;if(a=null,e){r(!0);try{cp.exec(isWin32?`taskkill /IM ${l} /F`:`killall -9 ${l}`)}catch(t){}e.kill(0)}},c=()=>{n=!0,p()};process.on("SIGTERM",c),process.on("beforeExit",c),process.on("exit",c);let d,y=!1;const f=()=>{if(i.length&&!n)if(a){const[e,t,s]=i[0];y||(y=!0,r(!1)),http.get({port:o,auth:":"+pass,path:"/requests/"+e},(e=>{if(200===e.statusCode){let r="";e.on("data",(e=>{r+=e.toString()})).on("end",(()=>{try{t(jsonParse(r))}catch(e){console.log(r),s(e)}}))}else s(new Error(e.statusCode+": "+e.statusMessage));i.shift(),i.length&&f()})).on("error",(e=>{y=!1}))}else d||(d=net.createServer().once("close",(()=>{d=null,a=cp.spawn(e,s).once("error",(e=>{console.error("VLC_PALYER: error",e),p()})).once("close",(e=>{console.log("VLC_PALYER: close",e),p()})),setTimeout(f,2500)})).listen(0,(()=>{d&&(s[4]=""+(o=d.address().port),d.close())})))},m=(e,t,r)=>{i.push([e,t,r]),f()},S=(e,t)=>new Promise((r=>{if(e){let r;e="?command="+e,t&&(r=querystring.stringify(t))&&(e+="&"+r)}m("status.json"+e,r,(e=>{console.error(e),r(void 0)}))}));return{kill:c,stat:()=>S("").then((e=>({id:+e.currentplid,play:"playing"===e.state,loop:!!e.loop,random:!!e.random,volume:+e.volume/256*100,seek:100*+e.position,fullscreen:!!e.fullscreen}))),playlist:()=>new Promise(((e,t)=>{m("playlist.json",e,t)})).then((e=>(t.length=0,e.children[0].children.map((e=>(t.push(e.uri&&/^file:\/\//.test(e.uri)?e.uri.slice(7):""),{id:+e.id,current:!!e.current,duration:+e.duration||0,name:e.name})))))).catch((e=>{r(!0),console.error(e)})),playfile:e=>S("in_play",{input:e}),playbyid:e=>S("pl_play",{id:e}),appendfile:e=>S("in_enqueue",{input:e}),deletebyid:e=>S("pl_delete",{id:e}),pause:()=>S("pl_pause"),stop:()=>S("pl_stop"),next:()=>S("pl_next"),prev:()=>S("pl_previous"),empty:()=>S("pl_empty"),random:()=>S("pl_random"),loop:()=>S("pl_loop"),fullscreen:()=>S("fullscreen"),volume:e=>S("volume",{val:+e/100*256|0}),seek:e=>S("seek",{val:(0|+e)+"%"})}},createMPV=(e,t,r)=>{const o=(isWin32?"\\\\.\\pipe\\":"/tmp/")+"rmc.mpv.socket",s=["--idle","--fs","--no-config","--input-ipc-server="+o],l=jsonStringify(path__default.default.basename(e)),a=e+" "+s.join(" ");let n,i,p=!1,c=!1,d=100,y=!1;const f=()=>{v=!1;const e=i,t=n;if(n=i=null,e&&e.destroy(),t){r(!0);try{cp__default.default.exec(isWin32?`taskkill /IM ${l} /F`:`killall -9 ${l}`)}catch(o){console.error(o)}t.kill(0)}},m=()=>{y=!0,f()};process.on("SIGTERM",m),process.on("beforeExit",m),process.on("exit",m);const S=[],u={},h=e=>()=>{i&&e===n&&i.connect(o)};let g=0,v=!1;const C=()=>{var t;g=0,console.log("MPV_PALYER: create: ",a),n=cp__default.default.spawn(e,s).once("error",(e=>{console.error("MPV_PALYER: error: ",e),f()})).once("close",(e=>{console.log("MPV_PALYER: close: ",e),f()})),(t=n,()=>{i=(new net.Socket).setEncoding("utf8").on("close",(e=>{console.log("MPV_SOCKET: close",e),f()})).on("error",(e=>{t===n&&++g<10?setTimeout(h(t),500*g):(console.log("MPV_SOCKET: error",e),f())})).on("ready",(()=>{console.log("MPV_SOCKET: ready"),v=!0,r(!1),setTimeout((()=>{L.volume(d),c=!c,L.random(),p=!p,L.loop(),E()}),500)})).on("data",(e=>{e.toString().split(/\r?\n/g).forEach((e=>{if(e=e.trim()){const t=jsonParse(e);if(t.request_id&&t.request_id in u){const[e,r,o]=u[t.request_id];delete u[t.request_id],"success"===t.error?r(t.data):o(new Error(t.error+jsonStringify(e)))}}}))})),setTimeout(h(t),2500)})()};let I=0;const E=()=>{if(S.length&&!y)if(n){if(v){const e=S.shift();I>100?I=1:++I;const t=jsonStringify({request_id:I,command:e[0]})+"\n";i.write(t)?(I in u&&u[I][2](new Error(""+u[I][0])),u[I]=e):e[2](new Error(""+e[0])),S.length&&E()}}else C()},F=(...e)=>new Promise((t=>{S.push([e,t,e=>{console.error(e),t(void 0)}]),E()})),O=(...e)=>F("set_property",...e),_=(...e)=>F("get_property",...e),L={kill:m,stat:()=>Promise.all([_("playlist"),_("pause"),_("loop-playlist"),_("volume"),_("percent-pos"),_("fullscreen")]).then((([e,t,r,o,s,l])=>{let a=-1,n=!1;if(e)for(let i=0;i<e.length;++i)if(e[i].current){a=i,n=!!e[i].playing;break}return{id:a,play:n&&!t,loop:p="inf"===r,random:c,volume:d=+o||0,seek:+s||0,fullscreen:!!l}})),playlist:()=>_("playlist").then((e=>(t.length=0,e.map(((e,r)=>{return t.push(e.filename||""),{id:r,current:!!e.current||0,duration:+e.duration,name:e.title||(o=e.filename.split(/[/\\]+/),o[o.length-1])};var o}))))),playfile:e=>F("loadfile",e,"append").then((e=>F("playlist-play-index",(e||{}).playlist_entry_id-1||0))),playbyid:e=>F("playlist-play-index",e).then((()=>O("pause",!1))),appendfile:e=>F("loadfile",e,"append"),deletebyid:e=>F("playlist-remove",e),pause:()=>F("cycle","pause"),stop:()=>F("stop"),next:()=>F("playlist-next").then((e=>void 0!==e||L.loop().then((()=>L.next().then(L.loop))))),prev:()=>F("playlist-prev").then((e=>void 0!==e||L.loop().then((()=>L.prev().then(L.loop))))),empty:()=>F("stop"),random:()=>F((c=!c)?"playlist-shuffle":"playlist-unshuffle"),loop:()=>O("loop-playlist",(p=!p)?"inf":"no"),fullscreen:()=>F("cycle","fullscreen"),volume:e=>O("volume",d=0|+e),seek:e=>O("percent-pos",0|+e)};return L};let PLAYER$1,playerCmd,playerType;const PLAYERS={vlc:createVLC,mpv:createMPV},createPlayer=(e,t)=>{let r;return playerType===CONFIG.player&&playerCmd===CONFIG[CONFIG.player]||(PLAYER$1&&PLAYER$1.kill(),playerType=CONFIG.player,playerCmd=CONFIG[CONFIG.player],CONFIG[CONFIG.player+"IsValid"]?PLAYER$1=PLAYERS[playerType](playerCmd,e,t):(PLAYER$1=null,t(!0),r=()=>Promise.resolve(void t(!0)))),PLAYER$1||{kill:r,stat:r,playlist:r,playfile:r,playbyid:r,appendfile:r,deletebyid:r,pause:r,stop:r,next:r,prev:r,empty:r,random:r,loop:r,fullscreen:r,volume:r,seek:r}},fsPromisesStat=fs.promises.stat,fsPromisesReaddir=fs.promises.readdir;let SOCKET,PLAYER;const isCorrectMime=e=>!0,send=(e,t,r)=>{e.send(jsonStringify({cmd:t,data:r}))};let home={},homeStr="";const libraryChangeStr=jsonStringify({cmd:"libraryChange"}),createHome=()=>{const e={},t=[];for(let s,l,a,n=0;n<CONFIG.library.length;++n)try{fs.existsSync(s=pathAbsolutely(CONFIG.library[n]))&&(a=(l=fs.statSync(s)).isDirectory(),t.push({id:n,type:a?"d":"f",name:path.basename(s).trim()||s}),e[n]=s)}catch(o){console.error(o)}console.log(os.EOL+"Directories:"),console.log("---------------------------------------------------------------"),console.log(jsonStringify(e,null,2)),console.log("---------------------------------------------------------------");const r=jsonStringify({cmd:"library",data:{id:-1,path:[],list:t}});if(home=e,homeStr!==(homeStr=r))for(const s of SOCKET.clients)s.send(libraryChangeStr)},createDir=e=>{const t=+e.id,r=path.resolve(home[t],...e.path.slice(1));if(0!==r.indexOf(home[t]))throw new Error("Not valid path: "+r);return r},errorPermissionDenied=(e,t)=>{send(e,"messageError","Permission denied: "+(path.join(...t.path)||"/"))},errorNotFoundDirectory=(e,t)=>{send(e,"messageError","Not found directory: "+(path.join(...t.path)||"/"))},errorNotValidDirectory=(e,t)=>{send(e,"messageError","Not valid directory: "+(path.join(...t.path)||"/"))},sendLibrary=async(e,t)=>{const r=+t.id,o=t.path;if(o.length&&r in home)try{const l=createDir(t);try{if((await fsPromisesStat(l)).isDirectory())try{const o=[],s=[],a=await fsPromisesReaddir(l,{withFileTypes:!0});let n;for await(const e of a)((n=e.isDirectory()||e.isSymbolicLink()&&(await fsPromisesStat(path.join(l,e.name))).isDirectory())||(e.name,1))&&(n?o:s).push({id:r,type:n?"d":"f",name:e.name});o.push(...s),send(e,"library",{id:r,path:t.path,list:o})}catch(s){errorPermissionDenied(e,t)}}catch(s){errorNotFoundDirectory(e,t),1===o.length&&createHome(),o.pop(),sendLibrary(e,{id:r,path:o})}}catch(s){errorNotValidDirectory(e,t)}else e.send(homeStr)},playerAppendFile=async(e,t)=>{try{const o=createDir(t);try{if(await fs.promises.stat(o))try{await PLAYER.appendfile(o),await playlistUpdate()}catch(r){console.error(r)}}catch(r){errorNotFoundDirectory(e,t)}}catch(r){errorNotValidDirectory(e,t)}};let playlistStr="";const playlistUpdate=async()=>{const e=await PLAYER.playlist()||[];if(playlistStr!==(playlistStr=jsonStringify({cmd:"playlist",data:e}))){for(const e of SOCKET.clients)e.send(playlistStr);return setTimeout(playlistUpdate,2500),playerStatUpdate(),!0}return!1};let playerStatCTO,playerStatId=NaN,playerStatStr="";const playerStatUpdate=async()=>{clearTimeout(playerStatCTO);const e=await PLAYER.stat();if(SOCKET.clients.size&&(playerStatCTO=setTimeout(playerStatUpdate,1e3)),e&&playerStatStr!==(playerStatStr=jsonStringify({cmd:"playerStat",data:e}))){for(const e of SOCKET.clients)e.send(playerStatStr);return playerStatId!==(playerStatId=e.id)&&playlistUpdate(),!0}return!1},PLAYLIST_FILES=[],playerMessage=e=>{let t;e?t=jsonStringify({cmd:"messageError",data:"Ошибка плеера"}):(t=jsonStringify({cmd:"messageSuccess",data:"Плеер подключен"}),[...PLAYLIST_FILES].forEach((e=>{e&&PLAYER.appendfile(decodeURIComponent(e))})));for(const r of SOCKET.clients)r.send(t)},createSocket=(e=SERVER)=>{SOCKET=new ws__default.default.Server({server:e}).on("close",(()=>{console.log("SocketServer close")})).on("error",(e=>{console.log("SocketServer error: ",e)})).on("connection",((t,r)=>{console.log("SocketServer connection: ",r.socket.remoteAddress),playerStatUpdate().then((e=>{e||playerStatStr&&t.send(playerStatStr)})),t.on("close",((e,t)=>{console.log("WebSocket close: ",e)})).on("error",(e=>{console.log("WebSocket error: ",e)})).on("message",(r=>{const{cmd:o,data:s}=jsonParse(r.toString());switch(o){case"playerAppendFile":playerAppendFile(t,s);break;case"playlistGet":playlistUpdate().then((e=>{e||playlistStr&&t.send(playlistStr)}));break;case"playlistPlayById":PLAYER.playbyid(s).then(playlistUpdate);break;case"playlistDeleteById":PLAYER.deletebyid(s).then(playlistUpdate);break;case"playlistClear":PLAYER.empty().then(playlistUpdate);break;case"playerLoop":PLAYER.loop().then(playerStatUpdate);break;case"playerRandom":PLAYER.random().then(playerStatUpdate);break;case"playerFullscreen":PLAYER.fullscreen().then(playerStatUpdate);break;case"playerPrev":PLAYER.prev().then(playerStatUpdate);break;case"playerPause":PLAYER.pause().then(playerStatUpdate);break;case"playerNext":PLAYER.next().then(playerStatUpdate);break;case"playerVolume":PLAYER.volume(s).then(playerStatUpdate);break;case"playerSeek":PLAYER.seek(s).then(playerStatUpdate);break;case"library":sendLibrary(t,s);break;case"routerGet":send(t,"router",getRouterAddress());break;case"settingsGet":send(t,"settings",CONFIG);break;case"settingsCheckVlc":send(t,"settingsCheckVlc",checkPlayer(s));break;case"settingsCheckMpv":send(t,"settingsCheckMpv",checkPlayer(s));break;case"settingsSet":CONFIG.port=+s.port||0,CONFIG.player=s.player||CONFIG.player,CONFIG.vlcIsValid&&!checkPlayer(s.vlc)||(CONFIG.vlc=s.vlc),CONFIG.mpvIsValid&&!checkPlayer(s.mpv)||(CONFIG.mpv=s.mpv),CONFIG.library=s.library.split("\n").map((e=>e.trim())).filter(Boolean),mendConfig(),saveConfig()&&(listenServer(),createHome(),PLAYER=createPlayer(PLAYLIST_FILES,playerMessage));break;case"exit":PLAYER.kill(),e.close(),process.exit(1);break;default:console.log("WebSocket message: ",r.toString())}}))})),createHome(),PLAYER=createPlayer(PLAYLIST_FILES,playerMessage)};console.clear(),console.log(os.EOL+os.EOL+"START "+name.toUpperCase()),readConfig(),mendConfig(),saveConfig()||(console.log(os.EOL+"CONFIG init:"),console.log("-------------------------------------------------------------"),console.log(CONFIG_FILE_STR),console.log("-------------------------------------------------------------")),createSocket(),listenServer();
